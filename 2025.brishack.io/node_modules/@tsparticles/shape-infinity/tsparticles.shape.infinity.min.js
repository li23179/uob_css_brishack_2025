/*! For license information please see tsparticles.shape.infinity.min.js.LICENSE.txt */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("@tsparticles/engine"));else if("function"==typeof define&&define.amd)define(["@tsparticles/engine"],t);else{var o="object"==typeof exports?t(require("@tsparticles/engine")):t(e.window);for(var r in o)("object"==typeof exports?exports:e)[r]=o[r]}}(this,(e=>(()=>{var t={303:t=>{t.exports=e}},o={};function r(e){var n=o[e];if(void 0!==n)return n.exports;var i=o[e]={exports:{}};return t[e](i,i.exports,r),i.exports}r.d=(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};r.r(n),r.d(n,{loadInfinityShape:()=>f});var i=r(303);const s=0,a=0;class p{constructor(){this.validTypes=["infinity"]}draw(e){!function(e){const{context:t,radius:o}=e,r=.55*o;t.moveTo(s,a),t.bezierCurveTo(r,-o,r,o,s,a),t.moveTo(s,a),t.bezierCurveTo(-r,-o,s-r,o,s,a)}(e)}}async function f(e,t=!0){(0,i.assertValidVersion)(e,"3.7.1"),await e.addShape(new p,t)}return n})()));