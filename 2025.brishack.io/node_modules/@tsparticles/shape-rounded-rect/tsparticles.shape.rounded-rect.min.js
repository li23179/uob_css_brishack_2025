/*! For license information please see tsparticles.shape.rounded-rect.min.js.LICENSE.txt */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("@tsparticles/engine"));else if("function"==typeof define&&define.amd)define(["@tsparticles/engine"],t);else{var r="object"==typeof exports?t(require("@tsparticles/engine")):t(e.window);for(var o in r)("object"==typeof exports?exports:e)[o]=r[o]}}(this,(e=>(()=>{var t={303:t=>{t.exports=e}},r={};function o(e){var i=r[e];if(void 0!==i)return i.exports;var n=r[e]={exports:{}};return t[e](n,n.exports,o),n.exports}o.d=(e,t)=>{for(var r in t)o.o(t,r)&&!o.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var i={};o.r(i),o.d(i,{loadRoundedRectShape:()=>s});var n=o(303);const a=Math.sqrt(2);class d{constructor(){this.validTypes=["rounded-rect"]}draw(e){const{context:t,particle:r,radius:o}=e,i=o/a,n=2*i,d=r.borderRadius??5;"roundRect"in t?t.roundRect(-i,-i,n,n,d):function(e,t,r,o){const i={x:-t,y:-t,height:r,width:r},n=o,a=o,d=o,s=o,{x:c,y:u,width:p,height:l}=i,f=c+p,y=u+l;e.moveTo(c+n,u),e.lineTo(f-a,u),e.quadraticCurveTo(f,u,f,u+a),e.lineTo(f,u+l-s),e.quadraticCurveTo(f,y,f-s,y),e.lineTo(c+d,y),e.quadraticCurveTo(c,y,c,y-d),e.lineTo(c,u+n),e.quadraticCurveTo(c,u,c+n,u)}(t,i,n,d)}particleInit(e,t){const r=t.shapeData;t.borderRadius=(0,n.getRangeValue)(r?.radius??5)*e.retina.pixelRatio}}async function s(e,t=!0){(0,n.assertValidVersion)(e,"3.7.1"),await e.addShape(new d,t)}return i})()));